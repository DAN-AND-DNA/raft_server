// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

#ifndef PROTOBUF_api_2eproto__INCLUDED
#define PROTOBUF_api_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_api_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultshandshake_qImpl();
void InitDefaultshandshake_q();
void InitDefaultshandshake_rImpl();
void InitDefaultshandshake_r();
void InitDefaultsentryImpl();
void InitDefaultsentry();
void InitDefaultsappendentries_qImpl();
void InitDefaultsappendentries_q();
void InitDefaultsappendentries_rImpl();
void InitDefaultsappendentries_r();
void InitDefaultsrequestvote_qImpl();
void InitDefaultsrequestvote_q();
void InitDefaultsrequestvote_rImpl();
void InitDefaultsrequestvote_r();
inline void InitDefaults() {
  InitDefaultshandshake_q();
  InitDefaultshandshake_r();
  InitDefaultsentry();
  InitDefaultsappendentries_q();
  InitDefaultsappendentries_r();
  InitDefaultsrequestvote_q();
  InitDefaultsrequestvote_r();
}
}  // namespace protobuf_api_2eproto
namespace api {
class appendentries_q;
class appendentries_qDefaultTypeInternal;
extern appendentries_qDefaultTypeInternal _appendentries_q_default_instance_;
class appendentries_r;
class appendentries_rDefaultTypeInternal;
extern appendentries_rDefaultTypeInternal _appendentries_r_default_instance_;
class entry;
class entryDefaultTypeInternal;
extern entryDefaultTypeInternal _entry_default_instance_;
class handshake_q;
class handshake_qDefaultTypeInternal;
extern handshake_qDefaultTypeInternal _handshake_q_default_instance_;
class handshake_r;
class handshake_rDefaultTypeInternal;
extern handshake_rDefaultTypeInternal _handshake_r_default_instance_;
class requestvote_q;
class requestvote_qDefaultTypeInternal;
extern requestvote_qDefaultTypeInternal _requestvote_q_default_instance_;
class requestvote_r;
class requestvote_rDefaultTypeInternal;
extern requestvote_rDefaultTypeInternal _requestvote_r_default_instance_;
}  // namespace api
namespace api {

enum entry_entrytype {
  entry_entrytype_NORMAL = 0,
  entry_entrytype_CFGADD = 1,
  entry_entrytype_CFGREM = 2,
  entry_entrytype_entry_entrytype_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  entry_entrytype_entry_entrytype_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool entry_entrytype_IsValid(int value);
const entry_entrytype entry_entrytype_entrytype_MIN = entry_entrytype_NORMAL;
const entry_entrytype entry_entrytype_entrytype_MAX = entry_entrytype_CFGREM;
const int entry_entrytype_entrytype_ARRAYSIZE = entry_entrytype_entrytype_MAX + 1;

const ::google::protobuf::EnumDescriptor* entry_entrytype_descriptor();
inline const ::std::string& entry_entrytype_Name(entry_entrytype value) {
  return ::google::protobuf::internal::NameOfEnum(
    entry_entrytype_descriptor(), value);
}
inline bool entry_entrytype_Parse(
    const ::std::string& name, entry_entrytype* value) {
  return ::google::protobuf::internal::ParseNamedEnum<entry_entrytype>(
    entry_entrytype_descriptor(), name, value);
}
// ===================================================================

class handshake_q : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.handshake_q) */ {
 public:
  handshake_q();
  virtual ~handshake_q();

  handshake_q(const handshake_q& from);

  inline handshake_q& operator=(const handshake_q& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  handshake_q(handshake_q&& from) noexcept
    : handshake_q() {
    *this = ::std::move(from);
  }

  inline handshake_q& operator=(handshake_q&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const handshake_q& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const handshake_q* internal_default_instance() {
    return reinterpret_cast<const handshake_q*>(
               &_handshake_q_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(handshake_q* other);
  friend void swap(handshake_q& a, handshake_q& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline handshake_q* New() const PROTOBUF_FINAL { return New(NULL); }

  handshake_q* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const handshake_q& from);
  void MergeFrom(const handshake_q& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(handshake_q* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 raftport = 1;
  void clear_raftport();
  static const int kRaftportFieldNumber = 1;
  ::google::protobuf::uint32 raftport() const;
  void set_raftport(::google::protobuf::uint32 value);

  // uint32 httpport = 2;
  void clear_httpport();
  static const int kHttpportFieldNumber = 2;
  ::google::protobuf::uint32 httpport() const;
  void set_httpport(::google::protobuf::uint32 value);

  // uint32 nodeid = 3;
  void clear_nodeid();
  static const int kNodeidFieldNumber = 3;
  ::google::protobuf::uint32 nodeid() const;
  void set_nodeid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:api.handshake_q)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 raftport_;
  ::google::protobuf::uint32 httpport_;
  ::google::protobuf::uint32 nodeid_;
  mutable int _cached_size_;
  friend struct ::protobuf_api_2eproto::TableStruct;
  friend void ::protobuf_api_2eproto::InitDefaultshandshake_qImpl();
};
// -------------------------------------------------------------------

class handshake_r : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.handshake_r) */ {
 public:
  handshake_r();
  virtual ~handshake_r();

  handshake_r(const handshake_r& from);

  inline handshake_r& operator=(const handshake_r& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  handshake_r(handshake_r&& from) noexcept
    : handshake_r() {
    *this = ::std::move(from);
  }

  inline handshake_r& operator=(handshake_r&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const handshake_r& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const handshake_r* internal_default_instance() {
    return reinterpret_cast<const handshake_r*>(
               &_handshake_r_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(handshake_r* other);
  friend void swap(handshake_r& a, handshake_r& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline handshake_r* New() const PROTOBUF_FINAL { return New(NULL); }

  handshake_r* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const handshake_r& from);
  void MergeFrom(const handshake_r& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(handshake_r* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string leaderhost = 2;
  void clear_leaderhost();
  static const int kLeaderhostFieldNumber = 2;
  const ::std::string& leaderhost() const;
  void set_leaderhost(const ::std::string& value);
  #if LANG_CXX11
  void set_leaderhost(::std::string&& value);
  #endif
  void set_leaderhost(const char* value);
  void set_leaderhost(const char* value, size_t size);
  ::std::string* mutable_leaderhost();
  ::std::string* release_leaderhost();
  void set_allocated_leaderhost(::std::string* leaderhost);

  // bool result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // uint32 leaderraftport = 3;
  void clear_leaderraftport();
  static const int kLeaderraftportFieldNumber = 3;
  ::google::protobuf::uint32 leaderraftport() const;
  void set_leaderraftport(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:api.handshake_r)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr leaderhost_;
  bool result_;
  ::google::protobuf::uint32 leaderraftport_;
  mutable int _cached_size_;
  friend struct ::protobuf_api_2eproto::TableStruct;
  friend void ::protobuf_api_2eproto::InitDefaultshandshake_rImpl();
};
// -------------------------------------------------------------------

class entry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.entry) */ {
 public:
  entry();
  virtual ~entry();

  entry(const entry& from);

  inline entry& operator=(const entry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  entry(entry&& from) noexcept
    : entry() {
    *this = ::std::move(from);
  }

  inline entry& operator=(entry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const entry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const entry* internal_default_instance() {
    return reinterpret_cast<const entry*>(
               &_entry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(entry* other);
  friend void swap(entry& a, entry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline entry* New() const PROTOBUF_FINAL { return New(NULL); }

  entry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const entry& from);
  void MergeFrom(const entry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(entry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef entry_entrytype entrytype;
  static const entrytype NORMAL =
    entry_entrytype_NORMAL;
  static const entrytype CFGADD =
    entry_entrytype_CFGADD;
  static const entrytype CFGREM =
    entry_entrytype_CFGREM;
  static inline bool entrytype_IsValid(int value) {
    return entry_entrytype_IsValid(value);
  }
  static const entrytype entrytype_MIN =
    entry_entrytype_entrytype_MIN;
  static const entrytype entrytype_MAX =
    entry_entrytype_entrytype_MAX;
  static const int entrytype_ARRAYSIZE =
    entry_entrytype_entrytype_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  entrytype_descriptor() {
    return entry_entrytype_descriptor();
  }
  static inline const ::std::string& entrytype_Name(entrytype value) {
    return entry_entrytype_Name(value);
  }
  static inline bool entrytype_Parse(const ::std::string& name,
      entrytype* value) {
    return entry_entrytype_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string host = 5;
  void clear_host();
  static const int kHostFieldNumber = 5;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // .api.entry.entrytype type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::api::entry_entrytype type() const;
  void set_type(::api::entry_entrytype value);

  // uint32 term = 2;
  void clear_term();
  static const int kTermFieldNumber = 2;
  ::google::protobuf::uint32 term() const;
  void set_term(::google::protobuf::uint32 value);

  // uint32 nodeid = 3;
  void clear_nodeid();
  static const int kNodeidFieldNumber = 3;
  ::google::protobuf::uint32 nodeid() const;
  void set_nodeid(::google::protobuf::uint32 value);

  // uint32 port = 4;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // uint32 write_it = 6;
  void clear_write_it();
  static const int kWriteItFieldNumber = 6;
  ::google::protobuf::uint32 write_it() const;
  void set_write_it(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:api.entry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  int type_;
  ::google::protobuf::uint32 term_;
  ::google::protobuf::uint32 nodeid_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::uint32 write_it_;
  mutable int _cached_size_;
  friend struct ::protobuf_api_2eproto::TableStruct;
  friend void ::protobuf_api_2eproto::InitDefaultsentryImpl();
};
// -------------------------------------------------------------------

class appendentries_q : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.appendentries_q) */ {
 public:
  appendentries_q();
  virtual ~appendentries_q();

  appendentries_q(const appendentries_q& from);

  inline appendentries_q& operator=(const appendentries_q& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  appendentries_q(appendentries_q&& from) noexcept
    : appendentries_q() {
    *this = ::std::move(from);
  }

  inline appendentries_q& operator=(appendentries_q&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const appendentries_q& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const appendentries_q* internal_default_instance() {
    return reinterpret_cast<const appendentries_q*>(
               &_appendentries_q_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(appendentries_q* other);
  friend void swap(appendentries_q& a, appendentries_q& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline appendentries_q* New() const PROTOBUF_FINAL { return New(NULL); }

  appendentries_q* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const appendentries_q& from);
  void MergeFrom(const appendentries_q& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(appendentries_q* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .api.entry entries = 5;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 5;
  const ::api::entry& entries(int index) const;
  ::api::entry* mutable_entries(int index);
  ::api::entry* add_entries();
  ::google::protobuf::RepeatedPtrField< ::api::entry >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::api::entry >&
      entries() const;

  // uint32 term = 1;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::uint32 term() const;
  void set_term(::google::protobuf::uint32 value);

  // uint32 prelogindex = 2;
  void clear_prelogindex();
  static const int kPrelogindexFieldNumber = 2;
  ::google::protobuf::uint32 prelogindex() const;
  void set_prelogindex(::google::protobuf::uint32 value);

  // uint32 prelogterm = 3;
  void clear_prelogterm();
  static const int kPrelogtermFieldNumber = 3;
  ::google::protobuf::uint32 prelogterm() const;
  void set_prelogterm(::google::protobuf::uint32 value);

  // uint32 leadercommit = 4;
  void clear_leadercommit();
  static const int kLeadercommitFieldNumber = 4;
  ::google::protobuf::uint32 leadercommit() const;
  void set_leadercommit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:api.appendentries_q)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::api::entry > entries_;
  ::google::protobuf::uint32 term_;
  ::google::protobuf::uint32 prelogindex_;
  ::google::protobuf::uint32 prelogterm_;
  ::google::protobuf::uint32 leadercommit_;
  mutable int _cached_size_;
  friend struct ::protobuf_api_2eproto::TableStruct;
  friend void ::protobuf_api_2eproto::InitDefaultsappendentries_qImpl();
};
// -------------------------------------------------------------------

class appendentries_r : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.appendentries_r) */ {
 public:
  appendentries_r();
  virtual ~appendentries_r();

  appendentries_r(const appendentries_r& from);

  inline appendentries_r& operator=(const appendentries_r& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  appendentries_r(appendentries_r&& from) noexcept
    : appendentries_r() {
    *this = ::std::move(from);
  }

  inline appendentries_r& operator=(appendentries_r&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const appendentries_r& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const appendentries_r* internal_default_instance() {
    return reinterpret_cast<const appendentries_r*>(
               &_appendentries_r_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(appendentries_r* other);
  friend void swap(appendentries_r& a, appendentries_r& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline appendentries_r* New() const PROTOBUF_FINAL { return New(NULL); }

  appendentries_r* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const appendentries_r& from);
  void MergeFrom(const appendentries_r& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(appendentries_r* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 term = 1;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::uint32 term() const;
  void set_term(::google::protobuf::uint32 value);

  // bool success = 2;
  void clear_success();
  static const int kSuccessFieldNumber = 2;
  bool success() const;
  void set_success(bool value);

  // bool isheartbeat = 3;
  void clear_isheartbeat();
  static const int kIsheartbeatFieldNumber = 3;
  bool isheartbeat() const;
  void set_isheartbeat(bool value);

  // @@protoc_insertion_point(class_scope:api.appendentries_r)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 term_;
  bool success_;
  bool isheartbeat_;
  mutable int _cached_size_;
  friend struct ::protobuf_api_2eproto::TableStruct;
  friend void ::protobuf_api_2eproto::InitDefaultsappendentries_rImpl();
};
// -------------------------------------------------------------------

class requestvote_q : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.requestvote_q) */ {
 public:
  requestvote_q();
  virtual ~requestvote_q();

  requestvote_q(const requestvote_q& from);

  inline requestvote_q& operator=(const requestvote_q& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  requestvote_q(requestvote_q&& from) noexcept
    : requestvote_q() {
    *this = ::std::move(from);
  }

  inline requestvote_q& operator=(requestvote_q&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const requestvote_q& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const requestvote_q* internal_default_instance() {
    return reinterpret_cast<const requestvote_q*>(
               &_requestvote_q_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(requestvote_q* other);
  friend void swap(requestvote_q& a, requestvote_q& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline requestvote_q* New() const PROTOBUF_FINAL { return New(NULL); }

  requestvote_q* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const requestvote_q& from);
  void MergeFrom(const requestvote_q& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(requestvote_q* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 term = 1;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::uint32 term() const;
  void set_term(::google::protobuf::uint32 value);

  // uint32 candidateId = 2;
  void clear_candidateid();
  static const int kCandidateIdFieldNumber = 2;
  ::google::protobuf::uint32 candidateid() const;
  void set_candidateid(::google::protobuf::uint32 value);

  // uint32 lastLogIndex = 3;
  void clear_lastlogindex();
  static const int kLastLogIndexFieldNumber = 3;
  ::google::protobuf::uint32 lastlogindex() const;
  void set_lastlogindex(::google::protobuf::uint32 value);

  // uint32 lastLogTerm = 4;
  void clear_lastlogterm();
  static const int kLastLogTermFieldNumber = 4;
  ::google::protobuf::uint32 lastlogterm() const;
  void set_lastlogterm(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:api.requestvote_q)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 term_;
  ::google::protobuf::uint32 candidateid_;
  ::google::protobuf::uint32 lastlogindex_;
  ::google::protobuf::uint32 lastlogterm_;
  mutable int _cached_size_;
  friend struct ::protobuf_api_2eproto::TableStruct;
  friend void ::protobuf_api_2eproto::InitDefaultsrequestvote_qImpl();
};
// -------------------------------------------------------------------

class requestvote_r : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:api.requestvote_r) */ {
 public:
  requestvote_r();
  virtual ~requestvote_r();

  requestvote_r(const requestvote_r& from);

  inline requestvote_r& operator=(const requestvote_r& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  requestvote_r(requestvote_r&& from) noexcept
    : requestvote_r() {
    *this = ::std::move(from);
  }

  inline requestvote_r& operator=(requestvote_r&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const requestvote_r& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const requestvote_r* internal_default_instance() {
    return reinterpret_cast<const requestvote_r*>(
               &_requestvote_r_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(requestvote_r* other);
  friend void swap(requestvote_r& a, requestvote_r& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline requestvote_r* New() const PROTOBUF_FINAL { return New(NULL); }

  requestvote_r* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const requestvote_r& from);
  void MergeFrom(const requestvote_r& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(requestvote_r* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 term = 1;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::uint32 term() const;
  void set_term(::google::protobuf::uint32 value);

  // bool votegranted = 2;
  void clear_votegranted();
  static const int kVotegrantedFieldNumber = 2;
  bool votegranted() const;
  void set_votegranted(bool value);

  // @@protoc_insertion_point(class_scope:api.requestvote_r)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 term_;
  bool votegranted_;
  mutable int _cached_size_;
  friend struct ::protobuf_api_2eproto::TableStruct;
  friend void ::protobuf_api_2eproto::InitDefaultsrequestvote_rImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// handshake_q

// uint32 raftport = 1;
inline void handshake_q::clear_raftport() {
  raftport_ = 0u;
}
inline ::google::protobuf::uint32 handshake_q::raftport() const {
  // @@protoc_insertion_point(field_get:api.handshake_q.raftport)
  return raftport_;
}
inline void handshake_q::set_raftport(::google::protobuf::uint32 value) {
  
  raftport_ = value;
  // @@protoc_insertion_point(field_set:api.handshake_q.raftport)
}

// uint32 httpport = 2;
inline void handshake_q::clear_httpport() {
  httpport_ = 0u;
}
inline ::google::protobuf::uint32 handshake_q::httpport() const {
  // @@protoc_insertion_point(field_get:api.handshake_q.httpport)
  return httpport_;
}
inline void handshake_q::set_httpport(::google::protobuf::uint32 value) {
  
  httpport_ = value;
  // @@protoc_insertion_point(field_set:api.handshake_q.httpport)
}

// uint32 nodeid = 3;
inline void handshake_q::clear_nodeid() {
  nodeid_ = 0u;
}
inline ::google::protobuf::uint32 handshake_q::nodeid() const {
  // @@protoc_insertion_point(field_get:api.handshake_q.nodeid)
  return nodeid_;
}
inline void handshake_q::set_nodeid(::google::protobuf::uint32 value) {
  
  nodeid_ = value;
  // @@protoc_insertion_point(field_set:api.handshake_q.nodeid)
}

// -------------------------------------------------------------------

// handshake_r

// bool result = 1;
inline void handshake_r::clear_result() {
  result_ = false;
}
inline bool handshake_r::result() const {
  // @@protoc_insertion_point(field_get:api.handshake_r.result)
  return result_;
}
inline void handshake_r::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:api.handshake_r.result)
}

// string leaderhost = 2;
inline void handshake_r::clear_leaderhost() {
  leaderhost_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& handshake_r::leaderhost() const {
  // @@protoc_insertion_point(field_get:api.handshake_r.leaderhost)
  return leaderhost_.GetNoArena();
}
inline void handshake_r::set_leaderhost(const ::std::string& value) {
  
  leaderhost_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.handshake_r.leaderhost)
}
#if LANG_CXX11
inline void handshake_r::set_leaderhost(::std::string&& value) {
  
  leaderhost_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:api.handshake_r.leaderhost)
}
#endif
inline void handshake_r::set_leaderhost(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  leaderhost_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.handshake_r.leaderhost)
}
inline void handshake_r::set_leaderhost(const char* value, size_t size) {
  
  leaderhost_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.handshake_r.leaderhost)
}
inline ::std::string* handshake_r::mutable_leaderhost() {
  
  // @@protoc_insertion_point(field_mutable:api.handshake_r.leaderhost)
  return leaderhost_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* handshake_r::release_leaderhost() {
  // @@protoc_insertion_point(field_release:api.handshake_r.leaderhost)
  
  return leaderhost_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void handshake_r::set_allocated_leaderhost(::std::string* leaderhost) {
  if (leaderhost != NULL) {
    
  } else {
    
  }
  leaderhost_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), leaderhost);
  // @@protoc_insertion_point(field_set_allocated:api.handshake_r.leaderhost)
}

// uint32 leaderraftport = 3;
inline void handshake_r::clear_leaderraftport() {
  leaderraftport_ = 0u;
}
inline ::google::protobuf::uint32 handshake_r::leaderraftport() const {
  // @@protoc_insertion_point(field_get:api.handshake_r.leaderraftport)
  return leaderraftport_;
}
inline void handshake_r::set_leaderraftport(::google::protobuf::uint32 value) {
  
  leaderraftport_ = value;
  // @@protoc_insertion_point(field_set:api.handshake_r.leaderraftport)
}

// -------------------------------------------------------------------

// entry

// .api.entry.entrytype type = 1;
inline void entry::clear_type() {
  type_ = 0;
}
inline ::api::entry_entrytype entry::type() const {
  // @@protoc_insertion_point(field_get:api.entry.type)
  return static_cast< ::api::entry_entrytype >(type_);
}
inline void entry::set_type(::api::entry_entrytype value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:api.entry.type)
}

// uint32 term = 2;
inline void entry::clear_term() {
  term_ = 0u;
}
inline ::google::protobuf::uint32 entry::term() const {
  // @@protoc_insertion_point(field_get:api.entry.term)
  return term_;
}
inline void entry::set_term(::google::protobuf::uint32 value) {
  
  term_ = value;
  // @@protoc_insertion_point(field_set:api.entry.term)
}

// uint32 nodeid = 3;
inline void entry::clear_nodeid() {
  nodeid_ = 0u;
}
inline ::google::protobuf::uint32 entry::nodeid() const {
  // @@protoc_insertion_point(field_get:api.entry.nodeid)
  return nodeid_;
}
inline void entry::set_nodeid(::google::protobuf::uint32 value) {
  
  nodeid_ = value;
  // @@protoc_insertion_point(field_set:api.entry.nodeid)
}

// uint32 port = 4;
inline void entry::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 entry::port() const {
  // @@protoc_insertion_point(field_get:api.entry.port)
  return port_;
}
inline void entry::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:api.entry.port)
}

// string host = 5;
inline void entry::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& entry::host() const {
  // @@protoc_insertion_point(field_get:api.entry.host)
  return host_.GetNoArena();
}
inline void entry::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.entry.host)
}
#if LANG_CXX11
inline void entry::set_host(::std::string&& value) {
  
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:api.entry.host)
}
#endif
inline void entry::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.entry.host)
}
inline void entry::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.entry.host)
}
inline ::std::string* entry::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:api.entry.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* entry::release_host() {
  // @@protoc_insertion_point(field_release:api.entry.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void entry::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:api.entry.host)
}

// uint32 write_it = 6;
inline void entry::clear_write_it() {
  write_it_ = 0u;
}
inline ::google::protobuf::uint32 entry::write_it() const {
  // @@protoc_insertion_point(field_get:api.entry.write_it)
  return write_it_;
}
inline void entry::set_write_it(::google::protobuf::uint32 value) {
  
  write_it_ = value;
  // @@protoc_insertion_point(field_set:api.entry.write_it)
}

// -------------------------------------------------------------------

// appendentries_q

// uint32 term = 1;
inline void appendentries_q::clear_term() {
  term_ = 0u;
}
inline ::google::protobuf::uint32 appendentries_q::term() const {
  // @@protoc_insertion_point(field_get:api.appendentries_q.term)
  return term_;
}
inline void appendentries_q::set_term(::google::protobuf::uint32 value) {
  
  term_ = value;
  // @@protoc_insertion_point(field_set:api.appendentries_q.term)
}

// uint32 prelogindex = 2;
inline void appendentries_q::clear_prelogindex() {
  prelogindex_ = 0u;
}
inline ::google::protobuf::uint32 appendentries_q::prelogindex() const {
  // @@protoc_insertion_point(field_get:api.appendentries_q.prelogindex)
  return prelogindex_;
}
inline void appendentries_q::set_prelogindex(::google::protobuf::uint32 value) {
  
  prelogindex_ = value;
  // @@protoc_insertion_point(field_set:api.appendentries_q.prelogindex)
}

// uint32 prelogterm = 3;
inline void appendentries_q::clear_prelogterm() {
  prelogterm_ = 0u;
}
inline ::google::protobuf::uint32 appendentries_q::prelogterm() const {
  // @@protoc_insertion_point(field_get:api.appendentries_q.prelogterm)
  return prelogterm_;
}
inline void appendentries_q::set_prelogterm(::google::protobuf::uint32 value) {
  
  prelogterm_ = value;
  // @@protoc_insertion_point(field_set:api.appendentries_q.prelogterm)
}

// uint32 leadercommit = 4;
inline void appendentries_q::clear_leadercommit() {
  leadercommit_ = 0u;
}
inline ::google::protobuf::uint32 appendentries_q::leadercommit() const {
  // @@protoc_insertion_point(field_get:api.appendentries_q.leadercommit)
  return leadercommit_;
}
inline void appendentries_q::set_leadercommit(::google::protobuf::uint32 value) {
  
  leadercommit_ = value;
  // @@protoc_insertion_point(field_set:api.appendentries_q.leadercommit)
}

// repeated .api.entry entries = 5;
inline int appendentries_q::entries_size() const {
  return entries_.size();
}
inline void appendentries_q::clear_entries() {
  entries_.Clear();
}
inline const ::api::entry& appendentries_q::entries(int index) const {
  // @@protoc_insertion_point(field_get:api.appendentries_q.entries)
  return entries_.Get(index);
}
inline ::api::entry* appendentries_q::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:api.appendentries_q.entries)
  return entries_.Mutable(index);
}
inline ::api::entry* appendentries_q::add_entries() {
  // @@protoc_insertion_point(field_add:api.appendentries_q.entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::api::entry >*
appendentries_q::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:api.appendentries_q.entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::api::entry >&
appendentries_q::entries() const {
  // @@protoc_insertion_point(field_list:api.appendentries_q.entries)
  return entries_;
}

// -------------------------------------------------------------------

// appendentries_r

// uint32 term = 1;
inline void appendentries_r::clear_term() {
  term_ = 0u;
}
inline ::google::protobuf::uint32 appendentries_r::term() const {
  // @@protoc_insertion_point(field_get:api.appendentries_r.term)
  return term_;
}
inline void appendentries_r::set_term(::google::protobuf::uint32 value) {
  
  term_ = value;
  // @@protoc_insertion_point(field_set:api.appendentries_r.term)
}

// bool success = 2;
inline void appendentries_r::clear_success() {
  success_ = false;
}
inline bool appendentries_r::success() const {
  // @@protoc_insertion_point(field_get:api.appendentries_r.success)
  return success_;
}
inline void appendentries_r::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:api.appendentries_r.success)
}

// bool isheartbeat = 3;
inline void appendentries_r::clear_isheartbeat() {
  isheartbeat_ = false;
}
inline bool appendentries_r::isheartbeat() const {
  // @@protoc_insertion_point(field_get:api.appendentries_r.isheartbeat)
  return isheartbeat_;
}
inline void appendentries_r::set_isheartbeat(bool value) {
  
  isheartbeat_ = value;
  // @@protoc_insertion_point(field_set:api.appendentries_r.isheartbeat)
}

// -------------------------------------------------------------------

// requestvote_q

// uint32 term = 1;
inline void requestvote_q::clear_term() {
  term_ = 0u;
}
inline ::google::protobuf::uint32 requestvote_q::term() const {
  // @@protoc_insertion_point(field_get:api.requestvote_q.term)
  return term_;
}
inline void requestvote_q::set_term(::google::protobuf::uint32 value) {
  
  term_ = value;
  // @@protoc_insertion_point(field_set:api.requestvote_q.term)
}

// uint32 candidateId = 2;
inline void requestvote_q::clear_candidateid() {
  candidateid_ = 0u;
}
inline ::google::protobuf::uint32 requestvote_q::candidateid() const {
  // @@protoc_insertion_point(field_get:api.requestvote_q.candidateId)
  return candidateid_;
}
inline void requestvote_q::set_candidateid(::google::protobuf::uint32 value) {
  
  candidateid_ = value;
  // @@protoc_insertion_point(field_set:api.requestvote_q.candidateId)
}

// uint32 lastLogIndex = 3;
inline void requestvote_q::clear_lastlogindex() {
  lastlogindex_ = 0u;
}
inline ::google::protobuf::uint32 requestvote_q::lastlogindex() const {
  // @@protoc_insertion_point(field_get:api.requestvote_q.lastLogIndex)
  return lastlogindex_;
}
inline void requestvote_q::set_lastlogindex(::google::protobuf::uint32 value) {
  
  lastlogindex_ = value;
  // @@protoc_insertion_point(field_set:api.requestvote_q.lastLogIndex)
}

// uint32 lastLogTerm = 4;
inline void requestvote_q::clear_lastlogterm() {
  lastlogterm_ = 0u;
}
inline ::google::protobuf::uint32 requestvote_q::lastlogterm() const {
  // @@protoc_insertion_point(field_get:api.requestvote_q.lastLogTerm)
  return lastlogterm_;
}
inline void requestvote_q::set_lastlogterm(::google::protobuf::uint32 value) {
  
  lastlogterm_ = value;
  // @@protoc_insertion_point(field_set:api.requestvote_q.lastLogTerm)
}

// -------------------------------------------------------------------

// requestvote_r

// uint32 term = 1;
inline void requestvote_r::clear_term() {
  term_ = 0u;
}
inline ::google::protobuf::uint32 requestvote_r::term() const {
  // @@protoc_insertion_point(field_get:api.requestvote_r.term)
  return term_;
}
inline void requestvote_r::set_term(::google::protobuf::uint32 value) {
  
  term_ = value;
  // @@protoc_insertion_point(field_set:api.requestvote_r.term)
}

// bool votegranted = 2;
inline void requestvote_r::clear_votegranted() {
  votegranted_ = false;
}
inline bool requestvote_r::votegranted() const {
  // @@protoc_insertion_point(field_get:api.requestvote_r.votegranted)
  return votegranted_;
}
inline void requestvote_r::set_votegranted(bool value) {
  
  votegranted_ = value;
  // @@protoc_insertion_point(field_set:api.requestvote_r.votegranted)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace api

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::api::entry_entrytype> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::api::entry_entrytype>() {
  return ::api::entry_entrytype_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_api_2eproto__INCLUDED
